{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/sprite_sheet.js","webpack:///./level.js","webpack:///./lib/animation.js","webpack:///./lib/main_menu.js","webpack:///./lib/monster.js","webpack:///./lib/player.js","webpack:///./lib/sound.js","webpack:///./lib/stage.js","webpack:///./lib/utils.js","webpack:///./main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACfA,eAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;AClRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,gBAAgB;AAC5F;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACjBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,IAAI;AACxB,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;AChFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA,oBAAoB,IAAI;AACxB,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AClKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA,kBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAyB;AACzB;AACA,kBAAyB;;AAEzB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA,qEAAqE,EAAE;AACvE;AACA;AACA;AACA,KAAK;AACL;;AAEA,iBAAiB,QAAQ;AACzB;AACA,uEAAuE,EAAE;AACzE;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iBAAiB,QAAQ;AACzB;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,QAAQ;AACzB;AACA,gEAAgE,EAAE;AAClE;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,QAAQ;AACzB;AACA,gEAAgE,EAAE;AAClE;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,QAAQ;AACzB;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,SAAS;AAC1B;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,SAAS;AAC1B;AACA,gEAAgE,EAAE;AAClE;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,QAAQ;AACzB;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,QAAQ;AACzB;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,QAAQ;AACzB;AACA,kEAAkE,EAAE;AACpE;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,QAAQ;AACzB;AACA,oEAAoE,EAAE;AACtE;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,KAAK;AACL,qCAAqC,SAAS;AAC9C;AACA,6EAA6E,EAAE;AAC/E;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC1QgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC,oCAAoC;;AAEpC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,wDAAwD;;AAEvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D,2BAA2B;AAC3B;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,OAAO;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,uCAAuC,GAAG;AAC1C,qDAAqD,qCAAqC,EAAE;AAC5F;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./main.js\");\n","class SpriteSheet {\n  constructor (sheet) {\n    this.sheet = sheet;\n  }\n\n  crop (x, y, withd, height) {\n    return {\n    \"sheet\": this.sheet,\n    \"x\": x,\n    \"y\": y,\n    \"width\": width,\n    \"height\": height};\n  }\n}\n\nexport default SpriteSheet;\n","export const level = { \"height\":48,\n \"layers\":[\n        {\n         \"data\":[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 5, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 5, 2, 2, 2, 5, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 5, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 5, 4, 4, 4, 4, 4, 4, 4, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n         \"height\":48,\n         \"name\":\"background\",\n         \"opacity\":1,\n         \"type\":\"tilelayer\",\n         \"visible\":true,\n         \"width\":64,\n         \"x\":0,\n         \"y\":0\n        },\n        {\n         \"height\":48,\n         \"name\":\"Object Layer 1\",\n         \"objects\":[\n                {\n                 \"height\":32,\n                 \"name\":\"player\",\n                 \"properties\":\n                    {\n\n                    },\n                 \"type\":\"player\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":96,\n                 \"y\":480\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"monster\",\n                 \"properties\":\n                    {\n                     \"maxdx\":\"10\",\n                     \"right\":\"true\"\n                    },\n                 \"type\":\"monster\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":64,\n                 \"y\":192\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"monster\",\n                 \"properties\":\n                    {\n                     \"left\":\"true\",\n                     \"maxdx\":\"4\"\n                    },\n                 \"type\":\"monster\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":1120,\n                 \"y\":416\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"monster\",\n                 \"properties\":\n                    {\n                     \"left\":\"true\",\n                     \"maxdx\":\"4\"\n                    },\n                 \"type\":\"monster\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":1632,\n                 \"y\":832\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"monster\",\n                 \"properties\":\n                    {\n                     \"maxdx\":\"6\",\n                     \"right\":\"true\"\n                    },\n                 \"type\":\"monster\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":1056,\n                 \"y\":1312\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"monster\",\n                 \"properties\":\n                    {\n                     \"left\":\"true\",\n                     \"maxdx\":\"4\"\n                    },\n                 \"type\":\"monster\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":640,\n                 \"y\":992\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"treasure\",\n                 \"properties\":\n                    {\n\n                    },\n                 \"type\":\"treasure\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":192,\n                 \"y\":864\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"treasure\",\n                 \"properties\":\n                    {\n\n                    },\n                 \"type\":\"treasure\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":96,\n                 \"y\":1312\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"treasure\",\n                 \"properties\":\n                    {\n\n                    },\n                 \"type\":\"treasure\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":1856,\n                 \"y\":384\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"treasure\",\n                 \"properties\":\n                    {\n\n                    },\n                 \"type\":\"treasure\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":704,\n                 \"y\":416\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"treasure\",\n                 \"properties\":\n                    {\n\n                    },\n                 \"type\":\"treasure\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":1984,\n                 \"y\":192\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"treasure\",\n                 \"properties\":\n                    {\n\n                    },\n                 \"type\":\"treasure\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":608,\n                 \"y\":1152\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"monster\",\n                 \"properties\":\n                    {\n                     \"maxdx\":\"10\",\n                     \"right\":\"true\"\n                    },\n                 \"type\":\"monster\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":1216,\n                 \"y\":736\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"monster\",\n                 \"properties\":\n                    {\n                     \"maxdx\":\"10\",\n                     \"right\":\"true\"\n                    },\n                 \"type\":\"monster\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":1856,\n                 \"y\":1344\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"monster\",\n                 \"properties\":\n                    {\n                     \"left\":\"true\",\n                     \"maxdx\":\"4\"\n                    },\n                 \"type\":\"monster\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":1024,\n                 \"y\":192\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"treasure\",\n                 \"properties\":\n                    {\n\n                    },\n                 \"type\":\"treasure\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":32,\n                 \"y\":192\n                },\n                {\n                 \"height\":32,\n                 \"name\":\"treasure\",\n                 \"properties\":\n                    {\n\n                    },\n                 \"type\":\"treasure\",\n                 \"visible\":true,\n                 \"width\":32,\n                 \"x\":1984,\n                 \"y\":1344\n                }],\n         \"opacity\":1,\n         \"type\":\"objectgroup\",\n         \"visible\":true,\n         \"width\":64,\n         \"x\":0,\n         \"y\":0\n        }],\n \"orientation\":\"orthogonal\",\n \"properties\":\n    {\n\n    },\n \"tileheight\":32,\n \"tilesets\":[\n        {\n         \"firstgid\":1,\n         \"image\":\"tiles.png\",\n         \"imageheight\":32,\n         \"imagewidth\":160,\n         \"margin\":0,\n         \"name\":\"tiles\",\n         \"properties\": {},\n         \"spacing\":0,\n         \"tileheight\":32,\n         \"tilewidth\":32\n        }],\n \"tilewidth\":32,\n \"version\":1,\n \"width\":64\n};\n","\nclass Animation {\n  constructor(frames) {\n    this.frames = frames;\n    this.index = 0;\n    this.lastTime = this.timestamp();\n    this.timer = 0;\n    this.speed;\n  }\n\n  tick () {\n    this.timer += this.timestamp() - this.lastTime;\n    this.lastTime = this.timestamp();\n    if (this.timer > this.speed) {\n      this.index++;\n      this.timer = 0;\n      if (this.index >= this.frames.length) {\n        this.index = 0;\n      }\n    }\n  }\n\n  timestamp() {\n    return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();\n  }\n\n  attackTick(player) {\n    const pl = player;\n    this.timer += this.timestamp() - this.lastTime;\n    this.lastTime = this.timestamp();\n    if (this.timer > this.speed) {\n      this.index++;\n      this.timer = 0;\n      if (this.index >= this.frames.length) {\n        pl.changeState({'attacking': false});\n        this.index = 0;\n      }\n    }\n  }\n\n  deathTick(entity) {\n    this.timer += this.timestamp() - this.lastTime;\n    this.lastTime = this.timestamp();\n    if (this.timer > this.speed) {\n      this.index++;\n      this.timer = 0;\n      if (this.index >= this.frames.length) {\n        entity.changeState({\n          'dead': true,\n          'dying': false\n        });\n        this.index = 0;\n      }\n    }\n  }\n\n  getCurrentFrame(){\n    this.speed = this.frames[this.index].speed;\n    return this.frames[this.index].frame;\n  }\n}\n\nexport default Animation;\n","\nclass MainMenu {\n  constructor (playing) {\n    this.playing = playing;\n    this.handlePlay = this.handlePlay.bind(this);\n  }\n\n  handlePlay(){\n    this.playing = true;\n  }\n\n  render() {\n    const buttons = \"<section>\" + \"<button className='play-button' onClick={this.handlePlay}>\" + \"play\" + \"</button>\" + \"</section>\";\n    return buttons;\n  }\n}\n\nexport default MainMenu;\n","import * as GameUtil from './utils';\nimport Animation from './animation.js';\n\nclass Monster {\n  constructor(entity, monster_assets){\n    this.state = entity;\n    this.state.maxdx = entity.maxdx/2;\n    this.state.falling = true;\n    this.state.dying = false;\n    this.state.dead = false;\n    this.state.jumping = false;\n    this.state.jump = false;\n    this.state.friction = entity.friction * (this.state.falling ? 0.5 : 1);\n    this.state.accel = entity.accel * (this.state.falling ? 0.5: 1);\n    this.state.ddx = 0;\n    this.state.ddy = entity.gravity;\n    this.state.wasLeft = this.state.dx < 0;\n    this.state.wasRight = this.state.dx > 0;\n    this.state.nY = this.state.x % 32;\n    this.state.nX = this.state.y & 32;\n    this.state.tileX = GameUtil.pixelToTile(this.state.x);\n    this.state.tileY = GameUtil.pixelToTile(this.state.y);\n    this.move_left_sprite = monster_assets.move_left_sprite;\n    this.move_right_sprite = monster_assets.move_right_sprite;\n    this.dying_sprite = monster_assets.dying_sprite;\n    this.dead_sprite = monster_assets.dead_sprite;\n    this.animations = {};\n    this.addAnimation = this.addAnimation.bind(this);\n    this.loadImages();\n  }\n\n  addAnimation(name, animation) {\n    this.animations[name] = animation;\n  }\n\n  loadImages() {\n    this.addAnimation(\"move_left\", new Animation(this.move_left_sprite));\n    this.addAnimation(\"move_right\", new Animation(this.move_right_sprite));\n    this.addAnimation('dying', new Animation(this.dying_sprite));\n    this.addAnimation('dead', new Animation(this.dead_sprite));\n  }\n\n  getCurrentAnimationFrame() {\n    if (this.state.dying) {\n      return this.animations.dying.getCurrentFrame();\n    } else if (this.state.left) {\n      return this.animations.move_left.getCurrentFrame();\n    } else if (this.state.right) {\n      return this.animations.move_right.getCurrentFrame();\n    }\n  }\n\n  tick(dt) {\n    this.animations.move_left.tick();\n    this.animations.move_right.tick();\n    this.animations.dying.deathTick(this);\n  }\n\n  bound(x, min, max) {\n    return Math.max(min, Math.min(max, x));\n  }\n\n  killed () {\n    this.state.dying = true;\n  }\n\n  changeState(obj){\n    Object.keys(obj).forEach( key => {\n      this.state[`${key}`] = obj[key];\n    });\n  }\n\n  render(ctx, dt) {\n    if (this.state.dead) {\n      ctx.drawImage(this.dead_sprite, this.state.x - 15, this.state.y - 30, GameUtil.TILE * 2, GameUtil.TILE * 2);\n    }\n    ctx.drawImage(this.getCurrentAnimationFrame(), this.state.x - 15, this.state.y - 30, GameUtil.TILE * 2, GameUtil.TILE * 2);\n  }\n}\n\nexport default Monster;\n","import * as GameUtil from './utils';\nimport Animation from './animation.js';\n\nclass Player {\n  constructor(entity, player_assets){\n    this.state = entity;\n    this.state.dying = false;\n    this.state.dead = false;\n    this.state.attacking = false;\n    this.state.facing = true;\n    this.state.falling = true;\n    this.state.jumping = false;\n    this.state.jump = false;\n    this.state.friction = entity.friction * (this.state.falling ? 0.5 : 1);\n    this.state.accel = entity.accel * (this.state.falling ? 0.5: 1);\n    this.state.ddx = 0;\n    this.state.ddy = entity.gravity;\n    this.state.wasLeft = this.state.dx < 0;\n    this.state.wasRight = this.state.dx > 0;\n    this.state.nY = this.state.x % 32;\n    this.state.nX = this.state.y & 32;\n    this.state.tileX = GameUtil.pixelToTile(this.state.x);\n    this.state.tileY = GameUtil.pixelToTile(this.state.y);\n    this.idle_right_sprite = player_assets.idle_right_sprite;\n    this.idle_left_sprite = player_assets.idle_left_sprite;\n    this.run_left_sprite = player_assets.run_left_sprite;\n    this.run_right_sprite = player_assets.run_right_sprite;\n    this.jump_left_sprite = player_assets.jump_left_sprite;\n    this.jump_right_sprite = player_assets.jump_right_sprite;\n    this.fall_right_sprite = player_assets.fall_right_sprite;\n    this.fall_left_sprite = player_assets.fall_left_sprite;\n    this.attack_left_sprite = player_assets.attack_left_sprite;\n    this.attack_right_sprite = player_assets.attack_right_sprite;\n    this.slash_right_sprite = player_assets.slash_right_sprite[0];\n    this.slash_left_sprite = player_assets.slash_left_sprite[0];\n    this.death_sprite = player_assets.death_sprite;\n    this.dead_sprite = player_assets.dead_sprite;\n    this.animations = {};\n    this.addAnimation = this.addAnimation.bind(this);\n    this.loadImages();\n  }\n\n  bound(x, min, max) {\n    return Math.max(min, Math.min(max, x));\n  }\n\n  tick(dt) {\n    this.animations.idle_right.tick();\n    this.animations.idle_left.tick();\n    this.animations.run_left.tick();\n    this.animations.run_right.tick();\n    this.animations.jump_left.tick();\n    this.animations.jump_right.tick();\n    this.animations.attack_left.attackTick(this);\n    this.animations.attack_right.attackTick(this);\n    this.animations.death.deathTick(this);\n  }\n\n  killPlayer() {\n    this.changeState({\n      left: false,\n      right: false,\n      dx: 0,\n      dy: 0,\n      maxdx: 0,\n      maxdy: 0,\n    });\n    this.state.dying = true;\n  }\n\n  addAnimation(name, animation) {\n    this.animations[name] = animation;\n  }\n\n  loadImages () {\n    this.addAnimation(\"idle_right\", new Animation(this.idle_right_sprite));\n    this.addAnimation(\"idle_left\", new Animation(this.idle_left_sprite));\n    this.addAnimation(\"run_left\", new Animation(this.run_left_sprite));\n    this.addAnimation(\"run_right\", new Animation(this.run_right_sprite));\n    this.addAnimation(\"jump_left\", new Animation(this.jump_left_sprite));\n    this.addAnimation(\"jump_right\", new Animation(this.jump_right_sprite));\n    this.addAnimation(\"fall_right\", new Animation(this.fall_right_sprite));\n    this.addAnimation(\"fall_left\", new Animation(this.fall_left_sprite));\n    this.addAnimation(\"attack_left\", new Animation(this.attack_left_sprite));\n    this.addAnimation(\"attack_right\", new Animation(this.attack_right_sprite));\n    this.addAnimation(\"slash_left\", new Animation(this.slash_left_sprite));\n    this.addAnimation(\"slash_right\", new Animation(this.slash_right_sprite));\n    this.addAnimation(\"death\", new Animation(this.death_sprite));\n  }\n\n  attack() {\n    this.state.attack = true;\n  }\n\n  stopAttack() {\n    this.state.attack = false;\n  }\n\n  getCurrentAnimationFrame() {\n    if (this.state.attacking) {\n      if (this.state.facing) {\n        return this.animations.attack_right.getCurrentFrame();\n      } else if (!this.state.facing){\n        return this.animations.attack_left.getCurrentFrame();\n      }\n    } else if ((this.state.jumping) && (this.state.facing) && !this.state.dying && !this.state.dead) {\n      return this.animations.jump_right.getCurrentFrame();\n    } else if ((this.state.jumping) && (!this.state.facing) && !this.state.dying && !this.state.dead) {\n      return this.animations.jump_left.getCurrentFrame();\n    } else if ((this.state.falling && this.state.facing) || (this.state.falling && this.state.dx > 0)) {\n      return this.animations.fall_right.getCurrentFrame();\n    } else if ((this.state.falling && !this.state.facing) || (this.state.falling && this.state.dx < 0)) {\n      return this.animations.fall_left.getCurrentFrame();\n    } else if (this.state.falling &&\n      !this.state.jumping &&\n      !this.state.left &&\n      !this.state.right) {\n      return this.animations.fall_right.getCurrentFrame();\n    }  else if (this.state.left && !this.state.dying && !this.state.dead) {\n      return this.animations.run_left.getCurrentFrame();\n    } else if (this.state.right && !this.state.dying && !this.state.dead) {\n      return this.animations.run_right.getCurrentFrame();\n    } else if (this.state.dying) {\n      return this.animations.death.getCurrentFrame();\n    } else {\n      if (this.state.facing){\n        return this.animations.idle_right.getCurrentFrame();\n      } else if (!this.state.facing) {\n        return this.animations.idle_left.getCurrentFrame();\n      }\n    }\n  }\n\n\n  changeState(obj){\n    Object.keys(obj).forEach( key => {\n      this.state[`${key}`] = obj[key];\n    });\n  }\n\n  render(ctx, dt) {\n    if (this.state.dead){\n      ctx.drawImage(this.dead_sprite, this.state.x - 65, this.state.y - 60, GameUtil.TILE * 5 + 1, GameUtil.TILE * 3);\n    } else if (!this.state.attacking){\n      ctx.drawImage(this.getCurrentAnimationFrame(), this.state.x - 65, this.state.y - 60, GameUtil.TILE * 5, GameUtil.TILE * 3);\n      // ctx.alpha = 0.2;\n      // ctx.fillStyle = '#ECD078';\n      // ctx.fillRect(this.state.x, this.state.y, GameUtil.TILE * 3, GameUtil.TILE);\n    } else if (this.state.attacking) {\n      ctx.drawImage(this.getCurrentAnimationFrame(), this.state.x - 65, this.state.y - 60, GameUtil.TILE * 5 + 1, GameUtil.TILE * 3);\n        if (this.state.facing) {\n          ctx.drawImage(this.slash_right_sprite, this.state.x, this.state.y - 40, GameUtil.TILE * 5 + 1, GameUtil.TILE * 3);\n        } else if (!this.state.facing) {\n          ctx.drawImage(this.slash_left_sprite, this.state.x - 130, this.state.y - 40, GameUtil.TILE * 5 + 1, GameUtil.TILE * 3);\n        }\n      // ctx.alpha = 0.2;\n      // ctx.fillStyle = '#ECD078';\n      // ctx.fillRect(this.state.x, this.state.y, GameUtil.TILE * 3, GameUtil.TILE);\n    }\n  }\n}\n\nexport default Player;\n","class gameSound {\n  constructor(el, audio){\n    this.sound = audio;\n    this.sound.setAttribute(\"preload\", \"auto\");\n    this.sound.setAttribute(\"controls\", \"none\");\n    this.sound.style.display = \"none\";\n    this.sound.loop = true;\n    el.appendChild(this.sound);\n    this.playing = false;\n  }\n\n  play() {\n    this.sound.play();\n    this.playing = true;\n  }\n\n  stopPlay() {\n    this.sound.pause();\n    this.playing = false;\n  }\n}\n\nexport default gameSound;\n","import * as GameUtil from './utils.js';\nimport Animation from './animation.js';\n\nclass Stage {\n  constructor(data, totalWidth, totalHeight, exit_assets) {\n    const colorOpts = { black: '#000000', yellow: '#ECD078', brick: '#D95B43', pink: '#C02942', purple: '#542437', grey: '#333', slate: '#53777A', gold: 'gold' };\n    this.state = {\n      data: data,\n      colors: [colorOpts.yellow, colorOpts.brick, colorOpts.pink, colorOpts.purple, colorOpts.grey]\n    };\n    this.state.totalWidth = GameUtil.MAP.totalWidth;\n    this.state.totalHeight = GameUtil.MAP.totalHeight;\n    this.state.tile = GameUtil.TILE;\n    this.exitY = undefined;\n    this.exitX = undefined;\n    this.exit_sprite = exit_assets.exit_sprite;\n    this.animations = {};\n    this.addAnimation = this.addAnimation.bind(this);\n    this.loadImages();\n  }\n\n  tick(dt) {\n    this.animations.exit.tick();\n  }\n\n  getCurrentAnimationFrame() {\n    return this.animations.exit.getCurrentFrame();\n  }\n\n  addAnimation(name, animation) {\n    this.animations[name] = animation;\n  }\n\n  loadImages() {\n    this.addAnimation(\"exit\", new Animation(this.exit_sprite));\n  }\n\n  tileCell(tx,ty) {\n    return this.state.data[tx + (ty*this.state.totalWidth)];\n  }\n\n  render(ctx, mapTiles) {\n    let x;\n    let y;\n    let cell;\n    for(y = 0 ; y < this.state.totalHeight ; y++) {\n      for(x = 0 ; x < this.state.totalWidth ; x++) {\n        cell = this.tileCell(x, y);\n        if (cell !== 0) {\n          if (cell === 4) {\n            ctx.drawImage(mapTiles.topTile, x * this.state.tile, y * this.state.tile, this.state.tile, this.state.tile);\n          } else if (cell === 5 || cell === 3 || cell === 2) {\n            ctx.drawImage(mapTiles.middleTile, x * this.state.tile, y * this.state.tile, this.state.tile, this.state.tile);\n          } else if (cell === 6) {\n            this.exitX = x;\n            this.exitY = y;\n            ctx.drawImage(this.getCurrentAnimationFrame(), x * this.state.tile - 15, y * this.state.tile - 32, this.state.tile * 2, this.state.tile * 2);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Stage;\n","export const MAP      = { totalWidth: 64, totalHeight: 48 };\nexport const TILE     = 32;\nexport const METER    = TILE;\nexport const GRAVITY  = 9.8 * 6;\nexport const MAXDX    = 15;\nexport const MAXDY    = 60;\nexport const ACCEL    = 0.1;\nexport const FRICTION = 0.05;\nexport const IMPULSE  = 1500;\nexport const COLOR    = { BLACK: '#000000', YELLOW: '#ECD078', BRICK: '#D95B43', PINK: '#C02942', PURPLE: '#542437', GREY: '#333', SLATE: '#53777A', GOLD: 'gold' };\nexport const COLORS   = [ COLOR.YELLOW, COLOR.BRICK, COLOR.PINK, COLOR.PURPLE, COLOR.GREY ];\nexport const KEY      = { SPACE: 32, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, Z: 90 };\n\nexport const tileToPixel = (tile) => {\n  return tile * 32;\n};\n\nexport const pixelToTile = (pixel) => {\n\n  return Math.floor(pixel/32);\n};\n\nexport const overlap = (x1, y1, w1, h1, x2, y2, w2, h2) => {\n  return !(((x1 + w1 - 1) < x2) ||\n           ((x2 + w2 - 1) < x1) ||\n           ((y1 + h1 - 1) < y2) ||\n           ((y2 + h2 - 1) < y1));\n};\n\nexport const loadMonsterImages = () => {\n  let monster_assets = {\n    move_left_sprite: [],\n    move_right_sprite: [],\n    dying_sprite: [],\n    dead_sprite: \"\"\n  };\n\n  let frameSpeed = 60;\n  let move_left_image;\n  let move_right_image;\n  let dying_image;\n  let dead_image;\n\n  for (let i = 0; i <= 3; i++){\n    dying_image = new Image();\n    dying_image.src = (`./assets/monster_sprite/slime-die-${i}.png`);\n    monster_assets.dying_sprite.push({\n      frame: dying_image,\n      speed: frameSpeed\n    });\n  }\n\n  dead_image = new Image();\n  dead_image.src = ('./assets/monster_sprite/slime-dead.png');\n  monster_assets.dead_sprite = dead_image;\n\n  for (let i = 1; i <= 4; i++) {\n    move_left_image = new Image();\n    move_left_image.src = (`./assets/monster_sprite/slime_move_left${i}.png`);\n    monster_assets.move_left_sprite.push({\n      frame: move_left_image,\n      speed: frameSpeed\n    });\n  }\n\n  for (let i = 1; i <= 4; i++) {\n    move_right_image = new Image();\n    move_right_image.src = (`./assets/monster_sprite/slime_move_right${i}.png`);\n    monster_assets.move_right_sprite.push({\n      frame: move_right_image,\n      speed: frameSpeed\n    });\n  }\n\n  return monster_assets;\n};\n\nexport const loadPlayerImages = () => {\n  let player_assets = {\n    idle_right_sprite: [],\n    idle_left_sprite: [],\n    run_left_sprite: [],\n    run_right_sprite: [],\n    jump_left_sprite: [],\n    jump_right_sprite: [],\n    fall_left_sprite: [],\n    fall_right_sprite: [],\n    attack_right_sprite: [],\n    attack_left_sprite: [],\n    slash_right_sprite: [],\n    slash_left_sprite: [],\n    death_sprite: [],\n    dead_sprite: []\n  };\n  let frameSpeed = 90;\n  let idle_right_image;\n  let idle_left_image;\n  let run_left_image;\n  let run_right_image;\n  let jump_left_image;\n  let jump_right_image;\n  let fall_right_image;\n  let fall_left_image;\n  let attack_left_image;\n  let attack_right_image,\n      slash_left_image,\n      slash_right_image,\n      death_image,\n      dead_image;\n\n\n  for (let i = 1; i <= 2; i++) {\n    fall_left_image = new Image();\n    fall_left_image.src = (`./assets/player_sprite/fall_left${i}.png`);\n    player_assets.fall_left_sprite.push({\n      frame: fall_left_image,\n      speed: 60\n    });\n  }\n  for (let i = 1; i <= 2; i++) {\n    fall_right_image = new Image();\n    fall_right_image.src = (`./assets/player_sprite/fall_right${i}.png`);\n    player_assets.fall_right_sprite.push({\n      frame: fall_right_image,\n      speed: 60\n    });\n  }\n  for (let i = 1; i <= 4; i++) {\n    idle_right_image = new Image();\n    idle_right_image.src = (`./assets/player_sprite/idle_right${i}.png`);\n    player_assets.idle_right_sprite.push({\n      frame: idle_right_image,\n      speed: 90\n    });\n  }\n  for (let i = 1; i <= 4; i++) {\n    idle_left_image = new Image();\n    idle_left_image.src = (`./assets/player_sprite/idle_left${i}.png`);\n    player_assets.idle_left_sprite.push({\n      frame: idle_left_image,\n      speed: 90\n    });\n  }\n  for (let i = 1; i <= 10; i++) {\n    jump_left_image = new Image();\n    jump_left_image.src = (`./assets/player_sprite/jump_left${i}.png`);\n    player_assets.jump_left_sprite.push({\n      frame: jump_left_image,\n      speed: 60\n    });\n  }\n  for (let i = 1; i <= 10; i++) {\n    jump_right_image = new Image();\n    jump_right_image.src = (`./assets/player_sprite/jump_right${i}.png`);\n    player_assets.jump_right_sprite.push({\n      frame: jump_right_image,\n      speed: 60\n    });\n  }\n  for (let i = 1; i <= 6; i++) {\n    run_right_image = new Image();\n    run_right_image.src = (`./assets/player_sprite/run_right${i}.png`);\n    player_assets.run_right_sprite.push({\n      frame: run_right_image,\n      speed: frameSpeed\n    });\n  }\n  for (let i = 1; i <= 6; i++) {\n    run_left_image = new Image();\n    run_left_image.src = (`./assets/player_sprite/run_left${i}.png`);\n    player_assets.run_left_sprite.push({\n      frame: run_left_image,\n      speed: frameSpeed\n    });\n  }\n  for (let i = 1; i <= 7; i++) {\n    attack_left_image = new Image();\n    attack_left_image.src = (`./assets/player_sprite/attack_left${i}.png`);\n    player_assets.attack_left_sprite.push({\n      frame: attack_left_image,\n      speed: 40\n    });\n  }\n  for (let i = 1; i <= 7; i++) {\n    attack_right_image = new Image();\n    attack_right_image.src = (`./assets/player_sprite/attack_right${i}.png`);\n    player_assets.attack_right_sprite.push({\n      frame: attack_right_image,\n      speed: 40\n    });\n  }\n\n    slash_left_image = new Image();\n    slash_left_image.src = (`./assets/effects/slash_left1.png`);\n    player_assets.slash_left_sprite.push(slash_left_image);\n\n    slash_right_image = new Image();\n    slash_right_image.src = (`./assets/effects/slash_right1.png`);\n    player_assets.slash_right_sprite.push(slash_right_image);\n\n  for (let i = 1; i <= 8; i++) {\n    death_image = new Image();\n    death_image.src = (`./assets/player_sprite/death${i}.png`);\n    player_assets.death_sprite.push({\n      frame: death_image,\n      speed: 90\n    });\n  }\n\n  dead_image = new Image();\n  dead_image.src = ('./assets/player_sprite/dead.png');\n  player_assets.dead_sprite = dead_image;\n\n  return player_assets;\n};\n\nexport const loadBackground = () => {\n  let background = new Image();\n  background.src = ('./assets/background/background.gif');\n  return background;\n};\n\nexport const loadMapTextures = () => {\n  const middleTile = new Image();\n  middleTile.src = ('./assets/tiles/middle_tile.png');\n  const topTile = new Image();\n  topTile.src = ('./assets/tiles/top_tile.png');\n  const map = {\n    middleTile: middleTile,\n    topTile: topTile\n  };\n  return map;\n};\n\nexport const loadExit = () => {\n  let exit_assets = {\n    exit_sprite: []\n  };\n  let exit_image;\n  for (let i = 1; i <= 19; i++) {\n    exit_image = new Image();\n    exit_image.src = (`./assets/exit/port${i}.png`);\n    exit_assets.exit_sprite.push({\n      frame: exit_image,\n      speed: 90\n    });\n  }\n  return exit_assets;\n};\n\nexport const loadMainMenuBackground = () => {\n  const mainMenuFigures = [];\n  const mult = 6;\n  let figure;\n  for (let i = 1; i < 8; i++) {\n    figure = document.createElement(\"FIGURE\");\n    if (i === 1) {\n      figure.style.animationDelay = `${2}s`;\n      figure.style.animationDuration = \"44s\";\n    } else {\n    figure.style.animationDelay = `${mult * i}s`;\n    }\n    figure.style.backgroundImage = \"url(\" + `./assets/background/background${i}.gif` + \")\";\n    mainMenuFigures.push(figure);\n  }\n  return mainMenuFigures;\n};\n","import { level } from './level.js';\nimport Stage from './lib/stage.js';\nimport Player from './lib/player.js';\nimport Monster from './lib/monster.js';\nimport * as GameUtil from './lib/utils.js';\nimport SpriteSheet from './assets/sprite_sheet.js';\nimport MainMenu from './lib/main_menu.js';\nimport gameSound from './lib/sound.js';\n\n(() => {\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = window.webkitRequestAnimationFrame ||\n                                   window.mozRequestAnimationFrame    ||\n                                   window.oRequestAnimationFrame      ||\n                                   window.msRequestAnimationFrame     ||\n                                   function(callback, element) {\n                                     window.setTimeout(callback, 1000 / 60);\n                                   };\n  }\n\n  const player_assets = GameUtil.loadPlayerImages();\n  const monster_assets = GameUtil.loadMonsterImages();\n  const background = GameUtil.loadBackground();\n  const mapTiles = GameUtil.loadMapTextures();\n  const exit_assets = GameUtil.loadExit();\n  const mainMenuFigures = GameUtil.loadMainMenuBackground();\n  const mainMenuMusic = new Audio('./assets/sound/Zabutom_-_Sine_ride.mp3');\n  const playingMusic = new Audio('./assets/sound/Breakbeat_Heartbeat_Refract.mp3');\n  playingMusic.volume = 0.2;\n  let currentMusic;\n\n  function timestamp() {\n    return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();\n  }\n\n  function bound(x, min, max) {\n    return Math.max(min, Math.min(max, x));\n  }\n\n  let fps      = 60;\n  let step     = 1/fps;\n  let canvas   = document.getElementById('canvas');\n  let ctx      = canvas.getContext('2d');\n  let width    = canvas.width  = GameUtil.MAP.totalWidth * GameUtil.TILE;\n  let height   = canvas.height = GameUtil.MAP.totalHeight * GameUtil.TILE;\n  let player   = {};\n  let monsters = [];\n  let treasure = [];\n  let cells    = [];\n  const playButton = document.getElementById('play-button');\n  const mainMenu = document.getElementById('main-menu');\n  const gameOver = document.getElementById('game-over');\n  const retryButton = document.getElementById('retry-button');\n  const playAgainButton = document.getElementById('play-again');\n  const winScreen = document.getElementById('win-screen');\n  const platformerDiv = document.getElementById('platformer');\n  const toggleAudioButton = document.getElementById('toggle-audio-button');\n  const mainMenuToggleAudioButton = document.getElementById('main-menu-toggle-audio-button');\n  let playing = false;\n  let win = false;\n  let audioAllowed = false;\n  const menuMusic = new gameSound(platformerDiv, mainMenuMusic);\n  menuMusic.playbackRate = 0.7;\n  const tileToPixel   = (t) =>     { return t*GameUtil.TILE;};\n  const pixelToTile   = (p) =>     { return Math.floor(p/GameUtil.TILE);};\n  const tileCell      = (tx,ty) => { return cells.state.data[tx + (ty*GameUtil.MAP.totalWidth)];};\n\n  mainMenuFigures.forEach( figure => {\n    mainMenu.appendChild(figure);\n  });\n\n  function overlap(x1, y1, w1, h1, x2, y2, w2, h2) {\n  return !(((x1 + w1 - 1) < x2) ||\n           ((x2 + w2 - 1) < x1) ||\n           ((y1 + h1 - 1) < y2) ||\n           ((y2 + h2 - 1) < y1));\n}\n\n  function render(ctx, frame, dt) {\n    ctx.clearRect(0, 0, width, height);\n    cells.render(ctx, mapTiles);\n    player.render(ctx, dt);\n    renderMonsters(ctx, dt);\n  }\n\n  function setup(map) {\n    let data    = map.layers[0].data;\n    let objects = map.layers[1].objects;\n    let n;\n    let obj;\n    let entity;\n    let monster;\n    cells = new Stage(data, GameUtil.MAP.totalWidth, GameUtil.MAP.totalHeight, exit_assets);\n    for(n = 0 ; n < objects.length ; n++) {\n      obj = objects[n];\n      entity = setupEntity(obj);\n      switch(obj.type) {\n      case \"player\":\n        player = new Player(entity, player_assets);\n      break;\n      case \"monster\":\n        monster = new Monster(entity, monster_assets);\n        monsters.push(monster);\n      break;\n      }\n    }\n  }\n\n  function renderMonsters(ctx, dt) {\n    let max = monsters.length;\n    let monster;\n    for (let i = 0; i < max; i++) {\n      monster = monsters[i];\n      if (!monster.state.dead){\n        monster.render(ctx, dt);\n      }\n    }\n  }\n\n  function setupEntity(obj) {\n\n    let entity = {};\n    entity.x        = obj.x;\n    entity.y        = obj.y;\n    entity.dx       = 0;\n    entity.dy       = 0;\n    entity.width    = obj.width;\n    entity.height    = obj.height;\n    entity.gravity  = GameUtil.METER * (GameUtil.GRAVITY);\n    entity.maxdx    = GameUtil.METER * (GameUtil.MAXDX);\n    entity.maxdy    = GameUtil.METER * (GameUtil.MAXDY);\n    entity.impulse  = GameUtil.METER * (obj.properties.impulse || GameUtil.IMPULSE);\n    entity.accel    = entity.maxdx / (obj.properties.accel    || GameUtil.ACCEL);\n    entity.friction = entity.maxdx / (obj.properties.friction || GameUtil.FRICTION);\n    entity.player   = obj.type == \"player\";\n    entity.monster   = obj.type == \"monster\";\n    entity.left     = obj.properties.left;\n    entity.right    = obj.properties.right;\n    entity.start    = { x: obj.x, y: obj.y };\n    entity.killed = entity.collected = 0;\n    return entity;\n  }\n\n  function update(dt) {\n    updatePlayer(dt);\n    updateMonsters(dt);\n    cells.tick();\n  }\n\n  function updatePlayer(dt) {\n    if (typeof cells.exitX !== 'undefined') {\n\n      if (overlap(pixelToTile(player.state.x), pixelToTile(player.state.y), 1, 1, cells.exitX, cells.exitY, 1, 1)) {\n\n        win = true;\n      }\n    }\n    if (!player.state.dead) {\n      updateEntity(player, dt);\n    } else {\n      player.render(ctx, dt);\n    }\n  }\n\n  function updateMonsters(dt) {\n    let max = monsters.length;\n    for (let i = 0; i < max; i++) {\n      updateMonster(monsters[i], dt);\n    }\n  }\n// 1053.3333333333337\n// ) ||\n// (\n//   (player.state.attacking && player.state.facing) &&\n//   (monster.state.x - player.state.x < GameUtil.TILE * 3)\n// ) ||\n// (\n//   (player.state.attacking && !player.state.facing) &&\n//   (player.state.x - monster.state.x < GameUtil.TILE * 3)\n// )\n// ) {\n  function updateMonster(monster, dt) {\n    if (!monster.state.dead || !monster.state.dying) {\n      updateEntity(monster, dt);\n      if (overlap(player.state.x, player.state.y, GameUtil.TILE, GameUtil.TILE, monster.state.x, monster.state.y, GameUtil.TILE, GameUtil.TILE)) {\n        if ((player.state.dy > 0) && (monster.state.y - player.state.y > GameUtil.TILE/2)) {\n          monster.killed();\n          player.state.killed++;\n        } else {\n          if (monster.state.dying || monster.state.dead){}\n          else {\n            debugger\n            player.killPlayer();\n          }\n        }\n      }\n      if (\n          (\n            (Math.abs(player.state.y - monster.state.y) < GameUtil.TILE * 2) &&\n            (player.state.attacking && player.state.facing) &&\n            (\n              (monster.state.x - player.state.x < GameUtil.TILE * 3) &&\n              (monster.state.x - player.state.x > 0)\n            )\n          ) ||\n          (\n            (Math.abs(player.state.y - monster.state.y) < GameUtil.TILE * 2) &&\n            (player.state.attacking && !player.state.facing) &&\n            (\n              (player.state.x - monster.state.x < GameUtil.TILE * 3) &&\n              (player.state.x - monster.state.x > 0)\n            )\n          )\n        ) {\n\n          monster.killed();\n          player.state.killed++;\n        }\n    }\n  }\n\n  function updateEntity(object, dt) {\n    let entity = object.state;\n    let wasLeft = entity.dx  < 0;\n    let wasRight = entity.dx  > 0;\n    let falling = entity.falling;\n    let friction = entity.friction * (falling ? 0.5 : 1);\n    let accel = entity.accel    * (falling ? 0.5 : 1);\n    let attacking = entity.attacking;\n\n      entity.ddx = 0;\n      entity.ddy = entity.gravity;\n\n      if (entity.left)\n        entity.ddx = entity.ddx - accel;\n      else if (wasLeft)\n        entity.ddx = entity.ddx + friction;\n\n      if (entity.right)\n        entity.ddx = entity.ddx + accel;\n      else if (wasRight)\n        entity.ddx = entity.ddx - friction;\n\n      if (entity.jump && !entity.jumping && !falling) {\n        entity.ddy = entity.ddy - entity.impulse;\n        entity.jumping = true;\n      }\n\n      entity.x  = entity.x  + (dt * entity.dx);\n      entity.y  = entity.y  + (dt * entity.dy);\n      entity.dx = bound(entity.dx + (dt * entity.ddx), -entity.maxdx, entity.maxdx);\n      entity.dy = bound(entity.dy + (dt * entity.ddy), -entity.maxdy, entity.maxdy);\n\n      if ((wasLeft  && (entity.dx > 0)) ||\n          (wasRight && (entity.dx < 0))) {\n        entity.dx = 0;\n      }\n\n      let tx = pixelToTile(entity.x);\n      let ty = pixelToTile(entity.y);\n      let nx = entity.x%GameUtil.TILE;\n      let ny = entity.y%GameUtil.TILE;\n      let cell = tileCell(tx, ty) === 6 ? 0 : tileCell(tx, ty);\n      let cellright = tileCell(tx + 1, ty) === 6 ? 0 : tileCell(tx + 1, ty);\n      let celldown  = tileCell(tx,     ty + 1) === 6 ? 0 : tileCell(tx,     ty + 1);\n      let celldiag  = tileCell(tx + 1, ty + 1) === 6 ? 0 : tileCell(tx + 1, ty + 1);\n\n      if (entity.dy > 0) {\n        if ((celldown && !cell) ||\n            (celldiag && !cellright && nx)) {\n          entity.y = tileToPixel(ty);\n          entity.dy = 0;\n          entity.falling = false;\n          entity.jumping = false;\n          ny = 0;\n        }\n      }\n      else if (entity.dy < 0) {\n        if ((cell      && !celldown) ||\n            (cellright && !celldiag && nx)) {\n          entity.y = tileToPixel(ty + 1);\n          entity.dy = 0;\n          cell      = celldown;\n          cellright = celldiag;\n          ny        = 0;\n        }\n      }\n\n      if (entity.dx > 0) {\n        if ((cellright && !cell) ||\n            (celldiag  && !celldown && ny)) {\n          entity.x = tileToPixel(tx);\n          entity.dx = 0;\n        }\n      }\n      else if (entity.dx < 0) {\n        if ((cell     && !cellright) ||\n            (celldown && !celldiag && ny)) {\n          entity.x = tileToPixel(tx + 1);\n          entity.dx = 0;\n        }\n      }\n\n      if (entity.monster) {\n        if (entity.left && (cell || !celldown)) {\n          entity.left = false;\n          entity.right = true;\n        }\n        else if (entity.right && (cellright || !celldiag)) {\n          entity.right = false;\n          entity.left  = true;\n        }\n      }\n\n      object.tick();\n\n      entity.falling = ! (celldown || (nx && celldiag));\n    }\n\n  let dt = 0;\n  let now;\n  let last = timestamp();\n  let fpsmeter = new FPSMeter({ decimals: 0, graph: true, theme: 'dark', right: '5px' });\n\n  function frame() {\n    const mainMenu = new MainMenu(playing);\n    if (win) {\n      winScreen.style.display = \"flex\";\n    }\n    else if (player.state.dead) {\n      gameOver.style.display = \"flex\";\n    } else if (playing) {\n      currentMusic = playingMusic;\n      canvas.style.backgroundImage = `url(${background.src})`;\n      canvas.style.backgroundSize = 'cover';\n      fpsmeter.tickStart();\n      now = timestamp();\n      dt += Math.min(1, (now - last) / 1000);\n      while (dt > step) {\n        dt -= step;\n        update(step);\n      }\n      render(ctx, dt);\n      last = now;\n      fpsmeter.tick();\n      requestAnimationFrame(frame, canvas);\n    } else if (playing === false && !player.state.dead){\n      currentMusic = mainMenuMusic;\n      canvas.style.background = \"none\";\n    }\n  }\n\n  function onKey (e, key, down) {\n    if ((typeof player === \"undefined\") || (!player.state.dead)){\n      switch(key) {\n        case GameUtil.KEY.LEFT:\n        player.changeState({'left': down, 'facing': false});\n        e.preventDefault(); return false;\n        case GameUtil.KEY.RIGHT:\n        player.changeState({'right': down, 'facing': true});\n        e.preventDefault();\n        return false;\n        case GameUtil.KEY.SPACE:\n        player.changeState({'jump': down});\n        e.preventDefault();\n        return false;\n        case GameUtil.KEY.Z:\n        if (!player.state.attacking) {\n          player.changeState({'attacking': true});\n        }\n        return false;\n      }\n    }\n  }\n\n  function play(e) {\n    return (e) => {\n      playing = true;\n      currentMusic.pause();\n      if (audioAllowed) {\n        playingMusic.play();\n      }\n      mainMenu.visibility = \"hidden\";\n      mainMenu.opacity = \"0\";\n      setTimeout(() => {mainMenu.style.display = \"none\";}, 2000);\n      frame();\n    };\n  }\n\n  function restartPlay(){\n    return (e) => {\n      if (win === true) {\n        win = false;\n        winScreen.style.display = \"none\";\n      }\n      player = {};\n      monsters = [];\n      treasure = [];\n      cells    = [];\n      gameOver.style.display = \"none\";\n      setup(level);\n      frame();\n    };\n  }\n\n  function toggleAudio(){\n    return (e) => {\n      audioAllowed = !audioAllowed;\n      if (audioAllowed) {\n        currentMusic.play();\n      } else {currentMusic.pause();}\n    };\n  }\n\n  // function mainMenuToggle(){\n  //   return(e) => {\n  //     audioAllowed = !audioAllowed;\n  //     if (audioAllowed){\n  //       mainMenuMusic.play();\n  //     }\n  //     else {\n  //       mainMenuMusic.stop();\n  //     }\n  //   };\n  // }\n\n\n// TODO: figure out how to stop holding down space bar from triggering jump\n\n  document.addEventListener('keydown', function(ev) {\n    return onKey(ev, ev.keyCode, true);  }, false);\n  document.addEventListener('keyup',   function(ev) { return onKey(ev, ev.keyCode, false); }, false);\n  playButton.addEventListener('click', play());\n  retryButton.addEventListener('click', restartPlay());\n  playAgainButton.addEventListener('click', restartPlay());\n  toggleAudioButton.addEventListener('click', toggleAudio());\n  // mainMenuToggleAudioButton.addEventListener('click', mainMenuToggle());\n\n    setup(level);\n    frame();\n\n})();\n"],"sourceRoot":""}